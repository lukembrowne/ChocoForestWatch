name: Deploy (build on droplet)

on:
  push:
    branches: [main]          # production branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into droplet, pull latest code, rebuild & restart
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:    ${{ secrets.DO_HOST }}
          username: root
          key:     ${{ secrets.DO_SSH_KEY }}
          script: |
            set -euo pipefail

            # 1. Make sure the repo is present
            cd /root/opt || mkdir -p /root/opt && cd /root/opt
            if [ -d chocoforestwatch/.git ]; then
              echo "Repo exists – pulling latest commit"
              cd chocoforestwatch
              git pull --ff-only
            else
              echo "Cloning repo for the first time"
              git clone --depth 1 git@github.com:YOURNAME/chocoforestwatch.git
              cd chocoforestwatch
            fi

            # 2. Load environment file (already on server) – optional sanity check
            test -f .env.prod || { echo ".env.prod missing!"; exit 1; }

            # 3. Build the images locally on the droplet
            docker compose -f docker-compose.prod.yml build --pull

            # 4. Restart containers with the new images
            docker compose -f docker-compose.prod.yml down
            docker compose -f docker-compose.prod.yml up -d --remove-orphans

            # 5. Optional: prune dangling images to save disk
            docker image prune -f