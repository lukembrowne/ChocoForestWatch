services:
  db:
    image: postgis/postgis:15-3.3
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    environment:
      - TZ=America/New_York

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: always

  backend:
    build: 
      context: ./backend/djangocfw
      dockerfile: Dockerfile
    volumes:
      - ./data/planet_quads:/app/data/planet_quads
      - ./data/predictions:/app/data/predictions
      - ./data/models:/app/data/models
      - ./media:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    command: gunicorn djangocfw.wsgi:application --bind 0.0.0.0:8000 --workers 3
    restart: always
    environment:
      - TZ=America/New_York

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: ${VITE_API_URL}
        VUE_APP_PLANET_API_KEY: ${VUE_APP_PLANET_API_KEY}
        VITE_SENTRY_DSN: ${VITE_SENTRY_DSN}
        DJANGO_DEBUG: "False"  # Default to production
      target: "production"       # Use 'development' or 'production'
    ports:
      - "9000:9000"
    volumes:
      - ./data/predictions:/app/data/predictions:ro
      - ./data/planet_quads:/app/data/planet_quads:ro
      - ./data/models:/app/data/models:ro
    env_file:
      - ./.env
    restart: always
    environment:
      - TZ=America/New_York

  titiler:
      image: ghcr.io/developmentseed/titiler:latest
      platform: linux/amd64
      ports:
        - "8080:80"
      volumes:
        - ./titiler/cogs:/data
        - ./titiler/mosaicJsons:/mosaicJsons
        - ./titiler/scripts:/scripts
      env_file:
        - ./.env
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:80/healthz"]
        interval: 30s
        timeout: 10s
        retries: 3
      command: >
        bash -c "
          # Install rclone
          curl https://rclone.org/install.sh | bash &&
          # Configure rclone with DO Spaces
          mkdir -p /root/.config/rclone &&
          echo '[do-spaces]
          type = s3
          provider = DigitalOcean
          region = ${AWS_REGION}
          access_key_id = ${AWS_ACCESS_KEY_ID}
          secret_access_key = ${AWS_SECRET_ACCESS_KEY}
          endpoint = ${AWS_S3_ENDPOINT}' > /root/.config/rclone/rclone.conf &&
          # Run the mosaic script
          chmod +x /scripts/build_all_mosaics.sh &&
          cd /scripts &&
          ./build_all_mosaics.sh &&
          # Start the titiler server
          cd ../ &&
          uvicorn titiler.application.main:app --host 0.0.0.0 --port 80"

volumes:
  postgres_data:  
